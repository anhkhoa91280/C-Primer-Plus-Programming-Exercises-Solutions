CXX = clang++
FLAGS = -Wall -g
VERSION = -std=c++1y
COMPILE = -c
OBJ = -o
RM_OBJS = *.o .* .*.swp

main: main 3.5.o
	$(CXX) $(FLAGS) $(OBJ) main 3.5.o $(VERSION)
chartype.o: 3.5.cpp
	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) 3.5.o 3.5.cpp $(VERSION)

#main: main 3.4.o
#	$(CXX) $(FLAGS) $(OBJ) main 3.4.o $(VERSION)
#chartype.o: 3.4.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) 3.4.o 3.4.cpp $(VERSION)

#main: main 3.3.o
#	$(CXX) $(FLAGS) $(OBJ) main 3.3.o $(VERSION)
#chartype.o: 3.3.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) 3.3.o 3.3.cpp $(VERSION)

#main: main 3.2.o
#	$(CXX) $(FLAGS) $(OBJ) main 3.2.o $(VERSION)
#chartype.o: 3.2.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) 3.2.o 3.2.cpp $(VERSION)

#main: main 3.1.o
#	$(CXX) $(FLAGS) $(OBJ) main 3.1.o $(VERSION)
#chartype.o: 3.1.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) 3.1.o 3.1.cpp $(VERSION)

#main: main type_cast.o
#	$(CXX) $(FLAGS) $(OBJ) main type_cast.o $(VERSION)
#chartype.o: type_cast.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) type_cast.o type_cast.cpp $(VERSION)

#main: main type_conversions_1.o
#	$(CXX) $(FLAGS) $(OBJ) main type_conversions_1.o $(VERSION)
#chartype.o: type_conversions_1.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) type_conversions_1.o type_conversions_1.cpp $(VERSION)

#main: main arithmetic_types_modulus.o
#	$(CXX) $(FLAGS) $(OBJ) main arithmetic_types_modulus.o $(VERSION)
#chartype.o: arithmetic_types_modulus.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) arithmetic_types_modulus.o arithmetic_types_modulus.cpp $(VERSION)

#main: main arithmetic_types_division.o
#	$(CXX) $(FLAGS) $(OBJ) main arithmetic_types_division.o $(VERSION)
#chartype.o: arithmetic_types_division.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) arithmetic_types_division.o arithmetic_types_division.cpp $(VERSION)

#main: main floating_point_disadvantages.o
#	$(CXX) $(FLAGS) $(OBJ) main floating_point_disadvantages.o $(VERSION)
#chartype.o: floating_point_disadvantages.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) floating_point_disadvantages.o floating_point_disadvantages.cpp $(VERSION)

#main: main floating_point_constants.o
#	$(CXX) $(FLAGS) $(OBJ) main floating_point_constants.o $(VERSION)
#chartype.o: floating_point_constants.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) floating_point_constants.o floating_point_constants.cpp $(VERSION)

#main: main floating_points.o
#	$(CXX) $(FLAGS) $(OBJ) main floating_points.o $(VERSION)
#chartype.o: floating_points.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) floating_points.o floating_points.cpp $(VERSION)

#main: main universial_characters.o
#	$(CXX) $(FLAGS) $(OBJ) main universial_characters.o $(VERSION)
#chartype.o: universial_characters.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) universial_characters.o universial_characters.cpp $(VERSION)

#main: main escape_sequences.o
#	$(CXX) $(FLAGS) $(OBJ) main escape_sequences.o $(VERSION)
#chartype.o: escape_sequences.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) escape_sequences.o escape_sequences.cpp $(VERSION)

#main: main literals.o
#	$(CXX) $(FLAGS) $(OBJ) main literals.o $(VERSION)
#chartype.o: literals.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) literals.o literals.cpp $(VERSION)

#main: main chartype.o
#	$(CXX) $(FLAGS) $(OBJ) main chartype.o $(VERSION)
#chartype.o: chartype.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) chartype.o chartype.cpp $(VERSION)

#main: main hexoct2.o
#	$(CXX) $(FLAGS) $(OBJ) main hexoct2.o $(VERSION)
#hexoct1.o: hexoct2.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) hexoct2.o hexoct2.cpp $(VERSION)

#main: main hexoct1.o
#	$(CXX) $(FLAGS) $(OBJ) main hexoct1.o $(VERSION)
#hexoct1.o: hexoct1.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) hexoct1.o hexoct1.cpp $(VERSION)

#main: main prog_limits_2.o
#	$(CXX) $(FLAGS) $(OBJ) main prog_limits_2.o $(VERSION)
#prog_limits_2.o: limits_2.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) prog_limits_2.o limits_2.cpp $(VERSION)

#main: main prog_limits.o
#	$(CXX) $(FLAGS) $(OBJ) main prog_limits.o $(VERSION)

#prog_limits.o: limits.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) prog_limits.o limits.cpp $(VERSION)

#main: main prog_decimal_to_binary.o
#	$(CXX) $(FLAGS) $(OBJ) main prog_decimal_to_binary.o $(VERSION)

#prog_decimal_to_binary.o: decimal_to_binary.cpp
#	$(CXX) $(FLAGS) $(COMPILE) $(OBJ) prog_decimal_to_binary.o decimal_to_binary.cpp $(VERSION)

clean:
	rm $(RM_OBJS)

